(()=>{"use strict";const e=window.wp.element,t=window.wp.i18n,a="LOADING",s="ERROR",c=({props:e})=>{const{element:a,data:s,selectedThemes:c,setSelectedThemes:n}=e,{classNameBase:r}=a.dataset;return React.createElement("form",{className:`${r}__form`},React.createElement("div",{className:`${r}__form-inner`},React.createElement("ul",{className:`${r}__entries`},s.map((e=>React.createElement("li",{key:e.id,className:`${r}__entry ${r}__entry--${e.id}`},React.createElement("label",{className:`${r}__entry-label ${r}__entry-label--${e.id}`,for:`${r}__entry-checkbox ${r}__entry-checkbox--${e.id}`},React.createElement("input",{type:"checkbox",id:`${r}__entry-checkbox ${r}__entry-checkbox--${e.id}`,key:e.id,value:e.id,onChange:()=>(e=>{const{entryId:t,setSelectedThemes:a}=e;a((e=>e.includes(t)?e.filter((e=>e!==t)):[...e,t]))})({entryId:e.id,setSelectedThemes:n}),checked:c.includes(e.id)}),React.createElement("span",{className:`${r}__entry-name`},e.name)))))),React.createElement("div",{className:`${r}__button-wrapper ${r}__button-wrapper--search`},React.createElement("button",{className:`${r}__button ${r}__button--search`,type:"button"},(0,t.__)("Search offers","shp_gemport_search")))))},n=({element:t})=>{const{classNameBase:n,generation:r,postcode:o}=t.dataset,[l]=(0,e.useState)(o||""),[m,d]=(0,e.useState)(""),[i,p]=(0,e.useState)([]),[u,_]=(0,e.useState)("form"),h=(0,e.useMemo)((()=>`https://gemport.ch/gemport/public/api/themes?generation=${r}`),[]),$=i.join(","),f=(0,e.useMemo)((()=>`https://gemport.ch/gemport/public/api/offerings?zipcode=${l}&themes=${$}&search=${m}`),[l,$,m]);(0,e.useEffect)((()=>{console.log("listEndpoint",f)}),[i]);const{data:E,error:y,state:b}=(t=>{const[c,n]=(0,e.useState)({state:a,error:"",data:[],headers:{}}),r=e=>n({...c,...e});return(0,e.useEffect)((()=>{r({state:a}),fetch(t,{headers:{Accept:"application/json","Content-Type":"application/json"}}).then((e=>{if(e.status&&e.status>399)throw Error({status:e.status,text:e.statusText?e.statusText:""});return e})).then((e=>e.json())).then((e=>{r({state:"SUCCESS",data:e})})).catch((e=>{r({state:s,error:e.statusText?e.statusText:"fetch failed"})}))}),[]),c})(h);return b===a?"":(b===s&&console.log("Gemport API error",y),React.createElement("div",{className:`${n}__inner`},"form"===u&&React.createElement(c,{props:{element:t,classNameBase:n,data:E,selectedThemes:i,setSelectedThemes:p}})))};document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelectorAll("[data-gemport-search]");t.length&&t.forEach((t=>{(0,e.render)(React.createElement(n,{element:t}),t)}))}))})();